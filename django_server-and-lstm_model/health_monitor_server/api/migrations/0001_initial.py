# Generated by Django 4.2.7 on 2025-06-10 02:31

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("age", models.IntegerField()),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("MALE", "Male"),
                            ("FEMALE", "Female"),
                            ("OTHER", "Other"),
                        ],
                        max_length=10,
                    ),
                ),
                ("user_id", models.CharField(max_length=100, unique=True)),
                ("medical_history", models.TextField(blank=True)),
                ("emergency_contact", models.CharField(blank=True, max_length=20)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="HealthData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                ("heart_rate", models.FloatField(help_text="Heart rate in BPM")),
                (
                    "spo2",
                    models.FloatField(
                        help_text="Blood oxygen saturation in percentage"
                    ),
                ),
                ("accelerometer_x", models.FloatField()),
                ("accelerometer_y", models.FloatField()),
                ("accelerometer_z", models.FloatField()),
                ("gyroscope_x", models.FloatField()),
                ("gyroscope_y", models.FloatField()),
                ("gyroscope_z", models.FloatField()),
                (
                    "temperature",
                    models.FloatField(
                        blank=True, help_text="Body temperature in Celsius", null=True
                    ),
                ),
                (
                    "systolic_bp",
                    models.IntegerField(
                        blank=True, help_text="Systolic blood pressure", null=True
                    ),
                ),
                (
                    "diastolic_bp",
                    models.IntegerField(
                        blank=True, help_text="Diastolic blood pressure", null=True
                    ),
                ),
                (
                    "respiratory_rate",
                    models.FloatField(
                        blank=True,
                        help_text="Respiratory rate in breaths per minute",
                        null=True,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="health_data",
                        to="api.patient",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="Guardian",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "relationship",
                    models.CharField(
                        choices=[
                            ("PARENT", "Parent"),
                            ("CHILD", "Child"),
                            ("SPOUSE", "Spouse"),
                            ("SIBLING", "Sibling"),
                            ("CAREGIVER", "Caregiver"),
                            ("OTHER", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                ("phone_number", models.CharField(max_length=20)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("notification_enabled", models.BooleanField(default=True)),
                (
                    "fcm_token",
                    models.CharField(
                        blank=True,
                        help_text="Firebase Cloud Messaging token",
                        max_length=255,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="guardians",
                        to="api.patient",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Alert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("FALL", "Fall Detection"),
                            ("VITALS", "Abnormal Vitals"),
                            ("LOCATION", "Location Alert"),
                            ("ACTIVITY", "Activity Alert"),
                            ("MEDICATION", "Medication Reminder"),
                            ("OTHER", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("message", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("NEW", "New"),
                            ("ACKNOWLEDGED", "Acknowledged"),
                            ("RESOLVED", "Resolved"),
                            ("FALSE_ALARM", "False Alarm"),
                        ],
                        default="NEW",
                        max_length=20,
                    ),
                ),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "health_data",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="alerts",
                        to="api.healthdata",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alerts",
                        to="api.patient",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
    ]
